{"version":3,"file":"static/js/299.3a9a79b6.chunk.js","mappings":"mQAKaA,EAAQ,mCAAG,WAAOC,GAAP,uFACHC,EAAAA,EAAAA,IAAA,UALG,8CAKH,YAAiC,CAClDC,OAAQ,CACNF,KAAAA,EACAG,MAAO,MAJW,cAChBC,EADgB,yBAOfA,GAPe,2CAAH,sD,oCCHRC,EAAYC,EAAAA,GAAAA,IAAH,iIAOTC,EAASD,EAAAA,GAAAA,OAAH,oT,SCuDnB,EAvDgB,SAAC,GAAuC,IAArCE,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,eAChC,GAAwBC,EAAAA,EAAAA,UAAS,GAAjC,eAAOX,EAAP,KAAaY,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KA2BA,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,wGAEdF,GAAa,GACPG,EAAeC,aAAaC,QAAQ,QACtCC,KAAKC,MAAMH,aAAaC,QAAQ,SAASG,KAAI,SAAAC,GAAG,OAAIA,EAAIC,EAAR,IAChD,GALU,SAMI3B,EAASC,GANb,OAMR2B,EANQ,OAORC,EAAgBD,EAAIvB,KAAKoB,KAAI,SAAAK,GAAG,yBACjCA,GADiC,IAEpCC,WAAUX,EAAaY,SAASF,EAAIH,KAFA,IAKtCjB,GAAQ,SAAAuB,GAAI,wBAAQA,IAAR,OAAiBJ,GAAjB,IAZE,kDAcdd,EAjBY,iBAGE,yBAgBdE,GAAa,GAhBC,6EAAH,qDAmBfE,GACD,GAAE,CAAClB,EAAMS,KAGR,UAACJ,EAAD,WACGU,IAAa,SAACkB,EAAA,EAAD,IACbpB,IAAS,yBAAK,mBACf,SAAC,IAAD,CAASL,KAAMA,EAAM0B,YAAaxB,IACjCF,EAAK2B,OAAS,GAAK3B,EAAK2B,OFzCV,KEyC6B,IAC1C,SAAC5B,EAAD,CACE6B,KAAK,SACLC,QAAS,WACPzB,EAAQZ,EAAO,EAChB,EAJH,SAKC,gBAMR,C","sources":["services/API.js","pages/Catalog/Catalog.styled.js","pages/Catalog/Catalog.jsx"],"sourcesContent":["import axios from \"axios\";\nexport const BASE_URL = \"https://6501ec99736d26322f5c7e6f.mockapi.io\";\nexport let page = 1;\nexport const limit = 12;\n\nexport const fetchAPI = async (page) => {\n  const data = await axios.get(`${BASE_URL}/adverts`, {\n    params: {\n      page,\n      limit: 12,\n    },\n  });\n  return data;\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 50px 128px 150px 128px;\n`;\n\nexport const Button = styled.button`\n  color: #fff;\n  font-family: Manrope;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n  padding: 13px;\n  border: 1px solid transparent;\n  border-radius: 10px;\n  background-color: #3470ff;\n\n  &:hover {\n    background-color: #0b44cd;\n    transition: 0.5s;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { fetchAPI, limit } from 'services/API';\nimport PropTypes from 'prop-types';\nimport Gallery from '../../components/CarList';\nimport Loader from '../../components/Loader';\nimport { Container, Button } from './Catalog.styled';\n\n\n\nconst Catalog = ({ cars, setCars, favoriteToggle }) => {\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const ERROR_MSG = 'Error happend';\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const favoriteCars = localStorage.getItem('favs')\n          ? JSON.parse(localStorage.getItem('favs')).map(fav => fav.id)\n          : [];\n        const res = await fetchAPI(page);\n        const favoritedCars = res.data.map(car => ({\n          ...car,\n          favorite: favoriteCars.includes(car.id) ? true : false,\n        }));\n\n        setCars(prev => [...prev, ...favoritedCars]);\n      } catch (error) {\n        setError(ERROR_MSG);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [page, setCars]);\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n      {error && <div>Error happend</div>}\n      <Gallery cars={cars} setFavorite={favoriteToggle} />\n      {cars.length > 0 && cars.length % limit === 0 && (\n        <Button\n          type=\"button\"\n          onClick={() => {\n            setPage(page + 1);\n          }}\n        >\n          Load more\n        </Button>\n      )}\n    </Container>\n  );\n};\n\nCatalog.propTypes = {\n  cars: PropTypes.array.isRequired,\n  setCars: PropTypes.func.isRequired,\n  favoriteToggle: PropTypes.func.isRequired,\n};\n\nexport default Catalog;\n"],"names":["fetchAPI","page","axios","params","limit","data","Container","styled","Button","cars","setCars","favoriteToggle","useState","setPage","error","setError","isLoading","setIsLoading","useEffect","fetchData","favoriteCars","localStorage","getItem","JSON","parse","map","fav","id","res","favoritedCars","car","favorite","includes","prev","Loader","setFavorite","length","type","onClick"],"sourceRoot":""}